w0 <- mu X . { w1?req() . flip (0.7) { H => w1!res(1) . X | T => w1!err(0) . X } }

w1 <- mu X . w2?req() .
             w0!req() .
             { w0?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w2!res(x * 1) . X | T => w2!err(0) . X } 
               else
                 flip (0.5) { H => w2!res(x * 1) . X | T => w2!err(0) . X }
             + w0?err(x) . w2!err(0) . X }

w2 <- mu X . w3?req() .
             w1!req() .
             { w1?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w3!res(x * 2) . X | T => w3!err(0) . X } 
               else
                 flip (0.5) { H => w3!res(x * 2) . X | T => w3!err(0) . X }
             + w1?err(x) . w3!err(0) . X }

w3 <- mu X . w4?req() .
             w2!req() .
             { w2?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w4!res(x * 3) . X | T => w4!err(0) . X } 
               else
                 flip (0.5) { H => w4!res(x * 3) . X | T => w4!err(0) . X }
             + w2?err(x) . w4!err(0) . X }

w4 <- mu X . w5?req() .
             w3!req() .
             { w3?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w5!res(x * 4) . X | T => w5!err(0) . X } 
               else
                 flip (0.5) { H => w5!res(x * 4) . X | T => w5!err(0) . X }
             + w3?err(x) . w5!err(0) . X }

w5 <- mu X . w6?req() .
             w4!req() .
             { w4?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w6!res(x * 5) . X | T => w6!err(0) . X } 
               else
                 flip (0.5) { H => w6!res(x * 5) . X | T => w6!err(0) . X }
             + w4?err(x) . w6!err(0) . X }

w6 <- mu X . w7?req() .
             w5!req() .
             { w5?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w7!res(x * 6) . X | T => w7!err(0) . X } 
               else
                 flip (0.5) { H => w7!res(x * 6) . X | T => w7!err(0) . X }
             + w5?err(x) . w7!err(0) . X }

w7 <- mu X . w8?req() .
             w6!req() .
             { w6?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w8!res(x * 7) . X | T => w8!err(0) . X } 
               else
                 flip (0.5) { H => w8!res(x * 7) . X | T => w8!err(0) . X }
             + w6?err(x) . w8!err(0) . X }

w8 <- mu X . w9?req() .
             w7!req() .
             { w7?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w9!res(x * 8) . X | T => w9!err(0) . X } 
               else
                 flip (0.5) { H => w9!res(x * 8) . X | T => w9!err(0) . X }
             + w7?err(x) . w9!err(0) . X }

w9 <- mu X . w10?req() .
             w8!req() .
             { w8?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w10!res(x * 9) . X | T => w10!err(0) . X } 
               else
                 flip (0.5) { H => w10!res(x * 9) . X | T => w10!err(0) . X }
             + w8?err(x) . w10!err(0) . X }

w10 <- mu X . w11?req() .
             w9!req() .
             { w9?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w11!res(x * 10) . X | T => w11!err(0) . X } 
               else
                 flip (0.5) { H => w11!res(x * 10) . X | T => w11!err(0) . X }
             + w9?err(x) . w11!err(0) . X }

w11 <- mu X . w12?req() .
             w10!req() .
             { w10?res(x) .
               if x < 100 then 
                 flip (0.7) { H => w12!res(x * 11) . X | T => w12!err(0) . X } 
               else
                 flip (0.5) { H => w12!res(x * 11) . X | T => w12!err(0) . X }
             + w10?err(x) . w12!err(0) . X }

w12 <- w11!req() .
  { w11?res(x) . mu X . dummy!done() . X
  + w11?err(x) . nil }

dummy <- mu X . w12?done() . X
